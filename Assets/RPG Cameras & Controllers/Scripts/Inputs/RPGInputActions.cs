//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Plugins/RPG Cameras & Controllers/Scripts/Inputs/RPGInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace JohnStairs.RCC.Inputs
{
    public partial class @RPGInputActions : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @RPGInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""RPGInputActions"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""c599e24d-7e56-48ff-b456-3a472f8ee5f5"",
            ""actions"": [
                {
                    ""name"": ""RPGController & RPGMotor"",
                    ""type"": ""Button"",
                    ""id"": ""d324a3e4-2be5-4d52-8162-b70f46318f5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""515c169c-36ff-49e5-a6ec-5328613fcd6f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Strafe"",
                    ""type"": ""Button"",
                    ""id"": ""6e9292cf-e67f-48e1-80ff-d5831b193831"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a2c152f4-1389-424e-9ca5-55db99f9de04"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Autorun"",
                    ""type"": ""Button"",
                    ""id"": ""08715240-5ff8-4e32-b4d9-82fa385682ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Walk"",
                    ""type"": ""Button"",
                    ""id"": ""460f9b54-8bc5-4f31-bc99-d0fe8e142629"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""89873a76-118e-4dfe-85c9-3838afaa66f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""72a89df9-fba8-4885-9e52-2a014b4b5d95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dive"",
                    ""type"": ""Button"",
                    ""id"": ""de811c1b-bbd6-4a93-b2af-799417fe5997"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Surface"",
                    ""type"": ""Button"",
                    ""id"": ""cbad99f2-8430-4680-ab8c-c686af112cdc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation Modifier"",
                    ""type"": ""Button"",
                    ""id"": ""87145a03-e58c-49aa-9ba6-a6303643a237"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move Forward Half 1"",
                    ""type"": ""Button"",
                    ""id"": ""bb0020c9-3394-4b02-8c07-e458595d422d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move Forward Half 2"",
                    ""type"": ""Button"",
                    ""id"": ""b8fc21fa-69d3-45b7-8e8d-3a9815568584"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RPGCamera"",
                    ""type"": ""Button"",
                    ""id"": ""4d999cff-5a75-4762-84f0-dea09da4d069"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Allow Orbiting"",
                    ""type"": ""Button"",
                    ""id"": ""0ac13cc5-909c-4a37-95b2-0e3a054f52c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Allow Orbiting with Character Rotation"",
                    ""type"": ""Button"",
                    ""id"": ""471ed402-fdf4-4ef8-92de-976caaf4e695"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation Amount"",
                    ""type"": ""Value"",
                    ""id"": ""4f84d1f3-0d23-4f68-9747-8e0948b3ec90"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e0212761-50a4-4adb-99c6-27a190a857de"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom To Min Distance"",
                    ""type"": ""Button"",
                    ""id"": ""ca69aa92-5ef0-4631-a435-d589ebd403ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom To Max Distance"",
                    ""type"": ""Button"",
                    ""id"": ""2c2e5781-b98a-4ef6-8278-d1ce7d2e7d92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Align Character"",
                    ""type"": ""Button"",
                    ""id"": ""c9c52604-85af-4b1f-85c5-304d113bc79d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause Rotation With Character"",
                    ""type"": ""Button"",
                    ""id"": ""5de6b4ec-9506-4886-b528-2eeda0c34e83"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""daeb76dd-4b91-4c4b-abe1-c0f0e03344e9"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1ec56458-9645-4afa-88fb-6f8c54ada361"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cea906e0-4c43-43cd-b153-d364a4aba9ea"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9620a2d4-f1fb-4930-8a0b-1b4b66ffe6cb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cda56663-e58f-45fb-a0f1-75ac1c574863"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""c6ed3e07-ca0d-4621-8d52-5078de9ddaad"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""740e1bbc-ebe3-4a9b-99c6-746fec4b7437"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""24bbde62-874e-4001-b09b-931aeab53f0f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a57f9be3-9419-4b74-8e31-265a244754cc"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6343461f-995c-4a5a-93fa-7171ffc1a9b3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""715f7cde-1928-41d8-843b-4ba70b6d22ee"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f4307f4c-beee-455a-afdc-09547c87ebb2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2c384072-bcbb-4814-8af9-dcc893618706"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""69c6882b-45ae-45c5-b0bc-d7241d170a94"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b65b99d1-3a7e-4508-84a3-1a0ad058f047"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05e79061-d2af-4022-b415-0e39bee316ee"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b015bb0-1701-49cf-af49-06b0f77647a4"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6bedbe4-7c49-4155-885f-e9d6d27f156b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""947dd345-0bc6-44e9-8ec4-8ac7a80f1765"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Surface"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""958cfad5-c5df-441b-9611-94f8a0cd3e6a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Surface"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0076669-9950-49f5-a70d-b482239f2d77"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e27172c2-1f58-4e30-85d4-8d36a8b04a7d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf47230f-efb9-4dd4-9f55-f44ca9ed55d5"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Autorun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd88586f-911b-4d3d-aa90-ced13887418a"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Autorun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70078dcd-98a9-4395-9b77-99e7a05cfa7e"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7edb1e6-d069-45aa-a579-345bfcf51eb0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74d2dbb5-5674-49c8-9688-e06ce215c8e4"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efcfcf9b-381a-4dab-b222-b44717a12ee1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Forward Half 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e592f6f-fc27-4b8f-bace-dad45ee59d3a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Forward Half 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16cec1cd-b16f-4c8e-8c66-f717a0c0d63f"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c0c90e6-e4bb-45ab-9012-8dc487284457"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad233e80-90dc-456e-8aba-621f681873b2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Allow Orbiting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c05ce67-582f-481e-85b8-c7ee55a7f215"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Allow Orbiting with Character Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a68a78d-cd21-4819-bf8b-a050c8b3a615"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.05,y=0.05)"",
                    ""groups"": """",
                    ""action"": ""Rotation Amount"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb650481-4c2f-46a8-a432-393265c7328d"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.15,y=0.15)"",
                    ""groups"": """",
                    ""action"": ""Rotation Amount"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""198b4a87-bdcf-44b7-8ee6-b00419a713f5"",
                    ""path"": ""<Keyboard>/pageUp"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom To Min Distance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0489f7e-10a7-40be-8fa8-6933723cd48d"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom To Min Distance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51efbdc5-bfd6-407f-bb0a-ab6244d056c6"",
                    ""path"": ""<Keyboard>/pageDown"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom To Max Distance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d364d9e-17d9-4cbb-8158-1efd7839987c"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom To Max Distance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad270857-1679-4231-a106-591b87de82e0"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-0.1,max=0.1)"",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18450123-5738-4a81-8544-d9e4f40fadcb"",
                    ""path"": ""<Gamepad>/dpad/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-0.01,max=0.01)"",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7879388c-7d09-4a60-bdb6-8a702d7ce4b2"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Align Character"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""deaf077e-a4a5-4a35-82a6-ca987267766c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause Rotation With Character"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Character
            m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
            m_Character_RPGControllerRPGMotor = m_Character.FindAction("RPGController & RPGMotor", throwIfNotFound: true);
            m_Character_Movement = m_Character.FindAction("Movement", throwIfNotFound: true);
            m_Character_Strafe = m_Character.FindAction("Strafe", throwIfNotFound: true);
            m_Character_Jump = m_Character.FindAction("Jump", throwIfNotFound: true);
            m_Character_Autorun = m_Character.FindAction("Autorun", throwIfNotFound: true);
            m_Character_Walk = m_Character.FindAction("Walk", throwIfNotFound: true);
            m_Character_Crouch = m_Character.FindAction("Crouch", throwIfNotFound: true);
            m_Character_Sprint = m_Character.FindAction("Sprint", throwIfNotFound: true);
            m_Character_Dive = m_Character.FindAction("Dive", throwIfNotFound: true);
            m_Character_Surface = m_Character.FindAction("Surface", throwIfNotFound: true);
            m_Character_RotationModifier = m_Character.FindAction("Rotation Modifier", throwIfNotFound: true);
            m_Character_MoveForwardHalf1 = m_Character.FindAction("Move Forward Half 1", throwIfNotFound: true);
            m_Character_MoveForwardHalf2 = m_Character.FindAction("Move Forward Half 2", throwIfNotFound: true);
            m_Character_RPGCamera = m_Character.FindAction("RPGCamera", throwIfNotFound: true);
            m_Character_AllowOrbiting = m_Character.FindAction("Allow Orbiting", throwIfNotFound: true);
            m_Character_AllowOrbitingwithCharacterRotation = m_Character.FindAction("Allow Orbiting with Character Rotation", throwIfNotFound: true);
            m_Character_RotationAmount = m_Character.FindAction("Rotation Amount", throwIfNotFound: true);
            m_Character_Zoom = m_Character.FindAction("Zoom", throwIfNotFound: true);
            m_Character_ZoomToMinDistance = m_Character.FindAction("Zoom To Min Distance", throwIfNotFound: true);
            m_Character_ZoomToMaxDistance = m_Character.FindAction("Zoom To Max Distance", throwIfNotFound: true);
            m_Character_AlignCharacter = m_Character.FindAction("Align Character", throwIfNotFound: true);
            m_Character_PauseRotationWithCharacter = m_Character.FindAction("Pause Rotation With Character", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Character
        private readonly InputActionMap m_Character;
        private ICharacterActions m_CharacterActionsCallbackInterface;
        private readonly InputAction m_Character_RPGControllerRPGMotor;
        private readonly InputAction m_Character_Movement;
        private readonly InputAction m_Character_Strafe;
        private readonly InputAction m_Character_Jump;
        private readonly InputAction m_Character_Autorun;
        private readonly InputAction m_Character_Walk;
        private readonly InputAction m_Character_Crouch;
        private readonly InputAction m_Character_Sprint;
        private readonly InputAction m_Character_Dive;
        private readonly InputAction m_Character_Surface;
        private readonly InputAction m_Character_RotationModifier;
        private readonly InputAction m_Character_MoveForwardHalf1;
        private readonly InputAction m_Character_MoveForwardHalf2;
        private readonly InputAction m_Character_RPGCamera;
        private readonly InputAction m_Character_AllowOrbiting;
        private readonly InputAction m_Character_AllowOrbitingwithCharacterRotation;
        private readonly InputAction m_Character_RotationAmount;
        private readonly InputAction m_Character_Zoom;
        private readonly InputAction m_Character_ZoomToMinDistance;
        private readonly InputAction m_Character_ZoomToMaxDistance;
        private readonly InputAction m_Character_AlignCharacter;
        private readonly InputAction m_Character_PauseRotationWithCharacter;
        public struct CharacterActions
        {
            private @RPGInputActions m_Wrapper;
            public CharacterActions(@RPGInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @RPGControllerRPGMotor => m_Wrapper.m_Character_RPGControllerRPGMotor;
            public InputAction @Movement => m_Wrapper.m_Character_Movement;
            public InputAction @Strafe => m_Wrapper.m_Character_Strafe;
            public InputAction @Jump => m_Wrapper.m_Character_Jump;
            public InputAction @Autorun => m_Wrapper.m_Character_Autorun;
            public InputAction @Walk => m_Wrapper.m_Character_Walk;
            public InputAction @Crouch => m_Wrapper.m_Character_Crouch;
            public InputAction @Sprint => m_Wrapper.m_Character_Sprint;
            public InputAction @Dive => m_Wrapper.m_Character_Dive;
            public InputAction @Surface => m_Wrapper.m_Character_Surface;
            public InputAction @RotationModifier => m_Wrapper.m_Character_RotationModifier;
            public InputAction @MoveForwardHalf1 => m_Wrapper.m_Character_MoveForwardHalf1;
            public InputAction @MoveForwardHalf2 => m_Wrapper.m_Character_MoveForwardHalf2;
            public InputAction @RPGCamera => m_Wrapper.m_Character_RPGCamera;
            public InputAction @AllowOrbiting => m_Wrapper.m_Character_AllowOrbiting;
            public InputAction @AllowOrbitingwithCharacterRotation => m_Wrapper.m_Character_AllowOrbitingwithCharacterRotation;
            public InputAction @RotationAmount => m_Wrapper.m_Character_RotationAmount;
            public InputAction @Zoom => m_Wrapper.m_Character_Zoom;
            public InputAction @ZoomToMinDistance => m_Wrapper.m_Character_ZoomToMinDistance;
            public InputAction @ZoomToMaxDistance => m_Wrapper.m_Character_ZoomToMaxDistance;
            public InputAction @AlignCharacter => m_Wrapper.m_Character_AlignCharacter;
            public InputAction @PauseRotationWithCharacter => m_Wrapper.m_Character_PauseRotationWithCharacter;
            public InputActionMap Get() { return m_Wrapper.m_Character; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
            public void SetCallbacks(ICharacterActions instance)
            {
                if (m_Wrapper.m_CharacterActionsCallbackInterface != null)
                {
                    @RPGControllerRPGMotor.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRPGControllerRPGMotor;
                    @RPGControllerRPGMotor.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRPGControllerRPGMotor;
                    @RPGControllerRPGMotor.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRPGControllerRPGMotor;
                    @Movement.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMovement;
                    @Movement.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMovement;
                    @Movement.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMovement;
                    @Strafe.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnStrafe;
                    @Strafe.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnStrafe;
                    @Strafe.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnStrafe;
                    @Jump.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnJump;
                    @Autorun.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAutorun;
                    @Autorun.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAutorun;
                    @Autorun.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAutorun;
                    @Walk.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnWalk;
                    @Walk.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnWalk;
                    @Walk.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnWalk;
                    @Crouch.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnCrouch;
                    @Crouch.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnCrouch;
                    @Crouch.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnCrouch;
                    @Sprint.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSprint;
                    @Sprint.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSprint;
                    @Sprint.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSprint;
                    @Dive.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnDive;
                    @Dive.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnDive;
                    @Dive.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnDive;
                    @Surface.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSurface;
                    @Surface.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSurface;
                    @Surface.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSurface;
                    @RotationModifier.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRotationModifier;
                    @RotationModifier.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRotationModifier;
                    @RotationModifier.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRotationModifier;
                    @MoveForwardHalf1.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMoveForwardHalf1;
                    @MoveForwardHalf1.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMoveForwardHalf1;
                    @MoveForwardHalf1.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMoveForwardHalf1;
                    @MoveForwardHalf2.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMoveForwardHalf2;
                    @MoveForwardHalf2.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMoveForwardHalf2;
                    @MoveForwardHalf2.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMoveForwardHalf2;
                    @RPGCamera.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRPGCamera;
                    @RPGCamera.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRPGCamera;
                    @RPGCamera.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRPGCamera;
                    @AllowOrbiting.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAllowOrbiting;
                    @AllowOrbiting.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAllowOrbiting;
                    @AllowOrbiting.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAllowOrbiting;
                    @AllowOrbitingwithCharacterRotation.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAllowOrbitingwithCharacterRotation;
                    @AllowOrbitingwithCharacterRotation.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAllowOrbitingwithCharacterRotation;
                    @AllowOrbitingwithCharacterRotation.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAllowOrbitingwithCharacterRotation;
                    @RotationAmount.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRotationAmount;
                    @RotationAmount.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRotationAmount;
                    @RotationAmount.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRotationAmount;
                    @Zoom.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoom;
                    @Zoom.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoom;
                    @Zoom.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoom;
                    @ZoomToMinDistance.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoomToMinDistance;
                    @ZoomToMinDistance.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoomToMinDistance;
                    @ZoomToMinDistance.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoomToMinDistance;
                    @ZoomToMaxDistance.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoomToMaxDistance;
                    @ZoomToMaxDistance.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoomToMaxDistance;
                    @ZoomToMaxDistance.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnZoomToMaxDistance;
                    @AlignCharacter.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAlignCharacter;
                    @AlignCharacter.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAlignCharacter;
                    @AlignCharacter.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAlignCharacter;
                    @PauseRotationWithCharacter.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnPauseRotationWithCharacter;
                    @PauseRotationWithCharacter.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnPauseRotationWithCharacter;
                    @PauseRotationWithCharacter.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnPauseRotationWithCharacter;
                }
                m_Wrapper.m_CharacterActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @RPGControllerRPGMotor.started += instance.OnRPGControllerRPGMotor;
                    @RPGControllerRPGMotor.performed += instance.OnRPGControllerRPGMotor;
                    @RPGControllerRPGMotor.canceled += instance.OnRPGControllerRPGMotor;
                    @Movement.started += instance.OnMovement;
                    @Movement.performed += instance.OnMovement;
                    @Movement.canceled += instance.OnMovement;
                    @Strafe.started += instance.OnStrafe;
                    @Strafe.performed += instance.OnStrafe;
                    @Strafe.canceled += instance.OnStrafe;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @Autorun.started += instance.OnAutorun;
                    @Autorun.performed += instance.OnAutorun;
                    @Autorun.canceled += instance.OnAutorun;
                    @Walk.started += instance.OnWalk;
                    @Walk.performed += instance.OnWalk;
                    @Walk.canceled += instance.OnWalk;
                    @Crouch.started += instance.OnCrouch;
                    @Crouch.performed += instance.OnCrouch;
                    @Crouch.canceled += instance.OnCrouch;
                    @Sprint.started += instance.OnSprint;
                    @Sprint.performed += instance.OnSprint;
                    @Sprint.canceled += instance.OnSprint;
                    @Dive.started += instance.OnDive;
                    @Dive.performed += instance.OnDive;
                    @Dive.canceled += instance.OnDive;
                    @Surface.started += instance.OnSurface;
                    @Surface.performed += instance.OnSurface;
                    @Surface.canceled += instance.OnSurface;
                    @RotationModifier.started += instance.OnRotationModifier;
                    @RotationModifier.performed += instance.OnRotationModifier;
                    @RotationModifier.canceled += instance.OnRotationModifier;
                    @MoveForwardHalf1.started += instance.OnMoveForwardHalf1;
                    @MoveForwardHalf1.performed += instance.OnMoveForwardHalf1;
                    @MoveForwardHalf1.canceled += instance.OnMoveForwardHalf1;
                    @MoveForwardHalf2.started += instance.OnMoveForwardHalf2;
                    @MoveForwardHalf2.performed += instance.OnMoveForwardHalf2;
                    @MoveForwardHalf2.canceled += instance.OnMoveForwardHalf2;
                    @RPGCamera.started += instance.OnRPGCamera;
                    @RPGCamera.performed += instance.OnRPGCamera;
                    @RPGCamera.canceled += instance.OnRPGCamera;
                    @AllowOrbiting.started += instance.OnAllowOrbiting;
                    @AllowOrbiting.performed += instance.OnAllowOrbiting;
                    @AllowOrbiting.canceled += instance.OnAllowOrbiting;
                    @AllowOrbitingwithCharacterRotation.started += instance.OnAllowOrbitingwithCharacterRotation;
                    @AllowOrbitingwithCharacterRotation.performed += instance.OnAllowOrbitingwithCharacterRotation;
                    @AllowOrbitingwithCharacterRotation.canceled += instance.OnAllowOrbitingwithCharacterRotation;
                    @RotationAmount.started += instance.OnRotationAmount;
                    @RotationAmount.performed += instance.OnRotationAmount;
                    @RotationAmount.canceled += instance.OnRotationAmount;
                    @Zoom.started += instance.OnZoom;
                    @Zoom.performed += instance.OnZoom;
                    @Zoom.canceled += instance.OnZoom;
                    @ZoomToMinDistance.started += instance.OnZoomToMinDistance;
                    @ZoomToMinDistance.performed += instance.OnZoomToMinDistance;
                    @ZoomToMinDistance.canceled += instance.OnZoomToMinDistance;
                    @ZoomToMaxDistance.started += instance.OnZoomToMaxDistance;
                    @ZoomToMaxDistance.performed += instance.OnZoomToMaxDistance;
                    @ZoomToMaxDistance.canceled += instance.OnZoomToMaxDistance;
                    @AlignCharacter.started += instance.OnAlignCharacter;
                    @AlignCharacter.performed += instance.OnAlignCharacter;
                    @AlignCharacter.canceled += instance.OnAlignCharacter;
                    @PauseRotationWithCharacter.started += instance.OnPauseRotationWithCharacter;
                    @PauseRotationWithCharacter.performed += instance.OnPauseRotationWithCharacter;
                    @PauseRotationWithCharacter.canceled += instance.OnPauseRotationWithCharacter;
                }
            }
        }
        public CharacterActions @Character => new CharacterActions(this);
        public interface ICharacterActions
        {
            void OnRPGControllerRPGMotor(InputAction.CallbackContext context);
            void OnMovement(InputAction.CallbackContext context);
            void OnStrafe(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnAutorun(InputAction.CallbackContext context);
            void OnWalk(InputAction.CallbackContext context);
            void OnCrouch(InputAction.CallbackContext context);
            void OnSprint(InputAction.CallbackContext context);
            void OnDive(InputAction.CallbackContext context);
            void OnSurface(InputAction.CallbackContext context);
            void OnRotationModifier(InputAction.CallbackContext context);
            void OnMoveForwardHalf1(InputAction.CallbackContext context);
            void OnMoveForwardHalf2(InputAction.CallbackContext context);
            void OnRPGCamera(InputAction.CallbackContext context);
            void OnAllowOrbiting(InputAction.CallbackContext context);
            void OnAllowOrbitingwithCharacterRotation(InputAction.CallbackContext context);
            void OnRotationAmount(InputAction.CallbackContext context);
            void OnZoom(InputAction.CallbackContext context);
            void OnZoomToMinDistance(InputAction.CallbackContext context);
            void OnZoomToMaxDistance(InputAction.CallbackContext context);
            void OnAlignCharacter(InputAction.CallbackContext context);
            void OnPauseRotationWithCharacter(InputAction.CallbackContext context);
        }
    }
}
